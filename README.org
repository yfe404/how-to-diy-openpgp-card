* DiY OpenPGP card
** What a OpenPGP card is?
   From Wikipedia:
   #+begin_quote
   In cryptography, the OpenPGP card is an ISO/IEC 7816-4, -8
   compatible smart card that is integrated with many OpenPGP
   functions. Using this smart card, various cryptographic tasks
   (encryption, decryption, digital signing/verification,
   authentication etc.) can be performed. It allows secure storage of
   secret key material; all versions of the protocol state, "Private
   keys and passwords cannot be read from the card with any command or
   function." However, new key pairs may be loaded onto the card
   at any time, overwriting the existing ones.
   #+end_quote

** Purpose of this repository
   This repository lists the steps and materials required to build
   your own OpenPGP card out of opensource hardware and software.

   It cost me around 25 euros but you'll probably be able to build
   your own for cheaper buying on Aliexpress or Ebay. If you're
   willing to wait 2-3 weeks you can buy everything for under 9 euros.


** Material list

   - STM32 Blue Pill [[https://www.amazon.fr/ARCELI-STM32F103C8T6-d%C3%A9veloppement-syst%C3%A8me-minimum/dp/B077MJKCVT/][Amazon]] [[https://fr.aliexpress.com/item/1005002317649315.html][Aliexpress]]
   - St-Link V2 [[https://www.amazon.fr/gp/product/B09HJQQ1C6/][Amazon]] [[https://fr.aliexpress.com/item/1766455290.html][Aliexpress]]

   (you can find both [[https://fr.aliexpress.com/item/32792513237.html][here]])



** Tuto background
https://blog.thestaticturtle.fr/lets-make-a-diy-gpg-usb-key/

** Instructions
Note: on the Blue pill, using the stlink no need to move the jumpers, let them on 0. 

#+begin_src sh
git clone https://github.com/TheStaticTurtle/gnuk
cd gnuk

git pull
git submodule update --init
git submodule sync
git submodule update --remote

cd chopstx
git pull origin master
cd ..

cd src
./configure --vidpid=234b:0000 --target=TURTLE_AUTH --enable-confirm-button
make clean
make
#+end_src

Adapt with your path
#+begin_src sh
sudo /usr/local/bin/openocd -f /usr/local/share/openocd/scripts/interface/stlink-v2.cfg -f /usr/local/share/openocd/scripts/target/stm32f1x.cfg
#+end_src

In another terminal:
#+begin_src sh
echo 'stm32f1x unlock 0' > tmp.network
echo 'reset halt' >> tmp.network
echo 'stm32f1x unlock 0' >> tmp.network
echo 'reset halt' >> tmp.network
echo 'flash erase_sector 0 0 127' >> tmp.network
echo 'flash write_bank 0 ./gnuk/src/build/gnuk.bin 0' >> tmp.network
echo 'reset' >> tmp.network
echo 'exit' >> tmp.network

cat tmp.network | netcat 127.0.0.1 4444
rm tmp.network
#+end_src

Afer flashing you should be able to see this in the output of =dmesg=
#+begin_src sh
[  808.561960] usb 2-1: Product: Gnuk Token
[  808.561964] usb 2-1: Manufacturer: Free Software Initiative of Japan
[  808.561967] usb 2-1: SerialNumber: TURTLE-1.2.15-87033357
#+end_src

Also running =gpg --card-status= should show:
#+begin_src sh
Reader ...........: 234B:0000:TURTLE-1.2.15-87033357:0
Application ID ...: D276000124010200FFFE870333570000
Version ..........: 2.0
Manufacturer .....: unmanaged S/N range
Serial number ....: 87033357
Name of cardholder: [not set]
Language prefs ...: [not set]
Sex ..............: unspecified
URL of public key : [not set]
Login data .......: [not set]
Signature PIN ....: forced
Key attributes ...: rsa2048 rsa2048 rsa2048
Max. PIN lengths .: 127 127 127
PIN retry counter : 3 3 3
Signature counter : 0
Signature key ....: [none]
Encryption key....: [none]
Authentication key: [none]
General key info..: [none]
#+end_src


** Notes for later

*** Connection failure with stlink-v2 using openocd
In case of connection failure with stlink-v2 using openocd, *Press and
hold the reset button while OpenOCD is trying to connect.*
(source: https://stackoverflow.com/questions/66533547/why-am-i-getting-a-communication-failure-when-trying-to-connect-with-stlink-v2-u)
(source: https://github.com/TeXitoi/blue-pill-quickstart/blob/master/README.md)

*** Flash STM32

#+begin_src sh
sudo /usr/local/bin/openocd -f /usr/local/share/openocd/scripts/interface/stlink-v2.cfg -f /usr/local/share/openocd/scripts/target/stm32f1x.cfg
#+end_src
(source: https://alexbirkett.github.io/microcontroller/2019/03/30/flash_bluepill_using_ST_link.html)

In a second terminal use =telnet= 

*** Getting error card not available: No such device

#+begin_src sh
gpg: selecting openpgp failed: No such device
gpg: OpenPGP card not available: No such device
#+end_src

#+begin_src sh
pkill -9 scdaemon
#+end_src
(source: https://support.nitrokey.com/t/openpgp-card-not-available-no-such-device/2018/10)

*** Cannot set the Reset Code or change PIN on card

The Gnuk software is configured to not allow this until the keys are
imported. You would get the following somewhat cryptical error
messages if you try.

BUT you can change the Admin PIN already.
(source: https://blog.josefsson.org/2022/12/24/openpgp-key-on-fst-01sz/)


*** Enable SSH access

sources:
- https://blog.danman.eu/2-usb-crypto-token-for-use-with-gpg-and-ssh/
- Explains the above solution: https://opensource.com/article/19/4/gpg-subkeys-ssh


*** Card not detected

#+begin_src sh
gpgconf --kill gpg-agent
#+end_src

sources:
- [[https://libreddit.spike.codes/r/archlinux/comments/vuc957/anyone_suddenly_seeing_gpg_openpgp_card_not/]]
